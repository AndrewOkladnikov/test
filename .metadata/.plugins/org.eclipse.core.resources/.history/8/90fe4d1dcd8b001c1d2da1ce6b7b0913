package _rcp;

/*      Класс для выборки, добавления, удаления данных из БД           */

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import org.eclipse.swt.events.MouseEvent;
import org.eclipse.swt.events.MouseListener;

public class Repository implements MouseListener{
	Connect connect;
	View view ;
	Repository(View view)	{this.view=view;}
	//Statement statement = null;
	String resultStr = "";
	List<String> lst = new ArrayList<String>();
	
/*      Метод для простого запроса, написанного во входном поле             */	
	
//	public void getrequest() {
//		try {
//			var statement = connect.conn.createStatement();
//			statement.executeQuery(view.intext.getText());
//		} catch (SQLException e1) {
//			// TODO Auto-generated catch block
//			e1.getMessage();
//		}
//	}
	
	/*      Метод для выборки всех книг из БД            */	
	
	public void getrequestBooks() {
		String selBookT = "SELECT * FROM public.\"books\"\n"
				+  "ORDER BY book_id ASC ";
		try {
			var statement = connect.conn.createStatement();
			var queryResult = statement.executeQuery(selBookT);
			while (queryResult.next()) {
				//lst.add(queryResult.getString("BOOK_ID"));
				lst.add(queryResult.getString("BOOK_NAME"));
				lst.add(queryResult.getString("AUTHOR"));
				lst.add(queryResult.getString("ISSUE_YEAR"));
				for(String str:  lst) {
					resultStr += str +"   ";
					System.out.print(str +"   ");
				}
				resultStr += "\n";
				lst.clear();
			}
			view.outtext.setText(resultStr);
			//v.outtext.setText(resultStr);
			resultStr = "";
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			//e.printStackTrace();
			view.outtext.setText(e1.getMessage());
		}
	}
	
	/*      Метод для выборки всех читателей из БД            */	
	
	public void getrequestReaders() {
		String readers = "SELECT * FROM \"readers\"\n"
				+  "ORDER BY reader_id";
		try {
			var statement = connect.conn.createStatement();
			var queryResult = statement.executeQuery(readers);
			while (queryResult.next()) {
				//lst.add(queryResult.getString("READER_ID"));
				lst.add(queryResult.getString("LAST_NAME"));
				lst.add(queryResult.getString("NAME"));
				lst.add(queryResult.getString("PATRONYMIC"));
				lst.add(queryResult.getString("GENDER"));
				lst.add(queryResult.getString("AGE"));
				for(String str:  lst) {
					resultStr += str +"   ";
					System.out.print(str +"   ");
				}
				resultStr += "\n";
				lst.clear();
			}
			view.outtext.setText(resultStr);
			resultStr = "";
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			//e.printStackTrace();
			view.outtext.setText(e1.getMessage());
		}
	}
	
	/*      Метод для выборки всех книг в пользовании из БД            */	
	
	public void getrequestInuse() {
		String inuse = "SELECT * FROM \"taken_books\"\n"
				+ "JOIN books ON taken_books.book_id = Books.book_id JOIN readers ON taken_books.reader_id = readers.reader_id";// JOIN readers ON taken_books.reader_id = readers.reader_id";
		try {
			var statement = connect.conn.createStatement();
			var queryResult = statement.executeQuery(inuse);
			while (queryResult.next()) {
				lst.add(queryResult.getString("book_name"));
				lst.add(queryResult.getString("AUTHOR"));
				lst.add(queryResult.getString("ISSUE_YEAR"));
				lst.add(queryResult.getString("LAST_NAME"));
				lst.add(queryResult.getString("NAME"));
				lst.add(queryResult.getString("PATRONYMIC"));
				lst.add(queryResult.getString("GENDER"));
				lst.add(queryResult.getString("AGE"));
				lst.add(queryResult.getString("ISSUE_DATE"));
				lst.add(queryResult.getString("planned_return_DATE"));
				
				for(String str:  lst) {
					resultStr += str +"   ";
					System.out.print(str +"   ");
				}
				resultStr += "\n";
				lst.clear();
			}
			view.outtext.setText(resultStr);
			resultStr = "";
		} catch (SQLException e1) {
			view.outtext.setText(e1.getMessage());
		}
	}
	@Override
	public void mouseDoubleClick(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseDown(MouseEvent e) {
		
		
	}

	@Override
	public void mouseUp(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	public Object addRecord(String str) {
		switch (str) {
        case  ("Книги"):
        	view.outtext.setText("Вы выбрали Книги");
        	//view.createWindow();
        	JFrame jFrame = new JFrame();
        	String getMessage = JOptionPane.showInputDialog(jFrame, "Название книги");
        	String getMessage1 = JOptionPane.showInputDialog(jFrame, "Автор");
        	String getMessage2 = JOptionPane.showInputDialog(jFrame, "Год выпуска");
        	var birth = Integer.parseInt(getMessage2);
        	JOptionPane.showMessageDialog(jFrame, "Your message: "+getMessage+" " + getMessage1+" " + getMessage2);
        	String querystr = "INSERT INTO books (book_name,author,issue_year) VALUES ('"+ getMessage+"','"+ getMessage1+"',"+ birth+")";
        	try {
        		var statement = connect.conn.createStatement();
				statement.executeQuery(querystr);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            break;
        case ("Читатели"):
        	view.outtext.setText("Вы выбрали Читатели");
        	JFrame jFrame1 = new JFrame();
        	getMessage = JOptionPane.showInputDialog(jFrame1, "Фамилия");
        	getMessage1 = JOptionPane.showInputDialog(jFrame1, "Имя");
        	getMessage2 = JOptionPane.showInputDialog(jFrame1, "Отчество");
        	String getMessage3 = JOptionPane.showInputDialog(jFrame1, "Пол");
        	String getMessage4 = JOptionPane.showInputDialog(jFrame1, "Год рождения");
        	//var gender = Integer.parseInt(getMessage3);
        	var birth1 = Integer.parseInt(getMessage4);
        	JOptionPane.showMessageDialog(jFrame1, "Your message: "+getMessage+" " + getMessage1+" " + getMessage2+" " + getMessage3);
        	querystr = "INSERT INTO readers (last_name,name,patronymic,gender,age) VALUES ('"+ getMessage+"','"+ getMessage1+"','"+ getMessage2+"','"+ getMessage3+"',"+birth1+")";
        	try {
        		var statement = connect.conn.createStatement();
				statement.executeQuery(querystr);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            break;
        case ("Выданные книги"):
        	view.outtext.setText("Вы выбрали Выданные книги");
            break;
        case (""):
            view.outtext.setText("Вы ничего не выбрали");
            break;
        default:
            
            break;
    }
		return null;
	}

}
