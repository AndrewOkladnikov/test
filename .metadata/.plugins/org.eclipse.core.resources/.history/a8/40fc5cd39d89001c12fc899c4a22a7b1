package rcp;


import java.awt.TextArea;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.*;
import javax.inject.Inject;

import org.eclipse.e4.core.contexts.IEclipseContext;
import org.eclipse.e4.core.di.annotations.Execute;
import org.eclipse.jface.viewers.ArrayContentProvider;
import org.eclipse.jface.viewers.ColumnLabelProvider;
import org.eclipse.jface.viewers.TableViewer;
import org.eclipse.jface.viewers.TableViewerColumn;
import org.eclipse.jface.widgets.WidgetFactory;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionListener;
import org.eclipse.swt.graphics.Font;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.layout.RowData;
import org.eclipse.swt.layout.RowLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Layout;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;
import org.eclipse.ui.ISharedImages;
import org.eclipse.ui.IWorkbench;
import org.eclipse.ui.part.ViewPart;

import static org.eclipse.swt.events.SelectionListener.*;

public class View extends ViewPart {
	public static final String ID = "1.rcp.view";
	//JDBCPostgreSQLConnect
	@Inject IWorkbench workbench;
	@Inject Display display;
	
	private TableViewer viewer;
	
	private class StringLabelProvider extends ColumnLabelProvider {
		
		// getText method is used from super class ColumnLabelProvider

		@Override
		public Image getImage(Object obj) {
			return workbench.getSharedImages().getImage(ISharedImages.IMG_OBJ_ELEMENT);
		}

	}
	
	public class ShowMapHandler {
	    @Execute
	    public void execute(IEclipseContext context) {
	        // add objects to the active local context injected into
	        // this handler
	        // ...
	    }

	}

	@Override
	public void createPartControl(Composite parent) {
		Font font = new Font(parent.getDisplay(),"Arial", 16, SWT.BOLD );
		Shell shell = new Shell (display);
		shell.setText("Snippet 108");
		Label label = new Label (shell, SWT.NONE);
		label.setText ("Enter your name:");
		Text text2 = new Text (shell, SWT.BORDER);
		text2.setLayoutData (new RowData (100, SWT.DEFAULT));
		Button ok = new Button (shell, SWT.PUSH);
		ok.setFont( font );
		ok.setText ("OK");
		ok.addSelectionListener(widgetSelectedAdapter(e -> text2.setText("OK")));
		Button cancel = new Button (shell, SWT.PUSH);
		cancel.setText ("Cancel");
		cancel.addSelectionListener(widgetSelectedAdapter(e -> text2.setText("CANSEL")));
		shell.setDefaultButton (cancel);
		shell.setLayout (new RowLayout ());
		shell.pack ();
		shell.open ();
		while (!shell.isDisposed ()) {
			if (!display.readAndDispatch ()) display.sleep ();
		}
		
		try {
			Class.forName("org.postgresql.Driver");
		} catch (ClassNotFoundException e2) {
			System.out.println("Драйвер не найден");
			//e2.printStackTrace();
			System.out.println(e2.getMessage());
		}
		System.out.println("Драйвер найден");
		
		try {
			Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/postgres","postgres", "1510kirs");
			System.out.println("Success connection");
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.getMessage();
		}
		GridLayout layout = new GridLayout();
		GridLayout grid = new GridLayout();
		
//		RowLayout rowl = new RowLayout();
//		rowl.marginLeft = 10;
//		rowl.marginTop = 10;
//		rowl.spacing = 15;
		layout.numColumns = 3;
		parent.setLayout(layout);
		new Label(parent, SWT.NONE).setText("Введите ФИО через пробел");
		Text multiText = new Text(parent,SWT.NONE|SWT.MULTI|SWT.V_SCROLL|SWT.WRAP);
		//multiText.setLayoutData(new GridData(250, 80));  
		//multiText.setLayoutData(new GridData(SWT.FILL, SWT.BEGINNING, true, false));
		multiText.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));
		multiText.setText("\n\n\n");
		//multiText.setEditable(true);
		Text text = new Text(parent, SWT.MULTI|SWT.WRAP);
		//text.setSelection(15);
		text.setText("Ура!!!  Строка ввода!!!");
		text.setLayoutData(new GridData(100, SWT.HORIZONTAL, true, true));
		Button b1 = new Button(parent, SWT.PUSH);
		b1.setFont(font);
		b1.setText("Press me, please!");
		
		viewer = new TableViewer(parent, SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL);
		viewer.getTable().setLinesVisible(true);
		Button b2 = new Button(parent, SWT.PUSH);
		b2.setText("Нажми меня");
		WidgetFactory.button(SWT.PUSH).text("Press me").onSelect(e-> text.setText("Другая кнопка нажата!!!")).create(parent);
		WidgetFactory.button(SWT.PUSH).text("Нажми").onSelect(e-> multiText.setText("Ещё одна кнопка нажата!!!")).create(parent);
		TableViewerColumn column = new TableViewerColumn(viewer, SWT.NONE);
		column.setLabelProvider(new StringLabelProvider());

		viewer.getTable().getColumn(0).setWidth(200);
		
		viewer.setContentProvider(ArrayContentProvider.getInstance());
		
		// Provide the input to the ContentProvider
		viewer.setInput(createInitialDataModel());
	}


	@Override
	public void setFocus() {
		viewer.getControl().setFocus();
	}
	
	private List<String> createInitialDataModel() {
		return Arrays.asList("One", "Two", "Three");
	}
	public String getRequest(String table) {
		String selectTableSQL = "SELECT * FROM public.\""+ table +"\"\n"
				+  "ORDER BY book_id ASC ";
		return selectTableSQL;
	}
}